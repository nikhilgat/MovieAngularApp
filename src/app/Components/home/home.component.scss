@import url('https://fonts.googleapis.com/css2?family=Comfortaa:wght@300;500&family=Nunito:wght@300&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Comfortaa:wght@300;500&family=Nunito:wght@300&family=Quicksand:wght@300&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@700&display=swap');

body {
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    font-family: 'Jost', sans-serif;
    background: linear-gradient(to bottom, #212121, #3bf598, #212121);
    overflow: hidden;
}

.bkghome {
    margin: auto;
    overflow: hidden;
}

.heading {
    font-family: 'Nunito', sans-serif;
    font-size: 60px;
    position: relative;
    top: -15%;
    left: 4%;
}

.button {
    height: 40px;
    pointer-events: auto;
	cursor: pointer;
	background: #212121;
	border: none;
	padding: 0.5rem 2rem;
	margin: 0;
	font-family: inherit;
	font-size: inherit;
	position: relative;
    right: 290%;
	display: inline-block;
    border-radius: 15px;
    box-shadow: 5px 20px 50px #000;
}
button:hover {
  border-color: #4fb783 ! important;
  transition: .3s ease-in;
}

.button--atlas {
    font-family: 'Quicksand', sans-serif;
	font-weight: 900;
}

.button--atlas > span {
	display: inline-block;
}

.button--atlas:hover > span {
	opacity: 0;
}

.marquee {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	overflow: hidden;
	pointer-events: none;
}

.marquee__inner {
	width: fit-content;
	display: flex;
	position: relative;
	--offset: 1rem;
	--move-initial: calc(-25% + var(--offset));
	--move-final: calc(-50% + var(--offset));
	transform: translate3d(var(--move-initial), 0, 0);
	animation: marquee 1s linear infinite;
	animation-play-state: paused;
	opacity: 0;
  overflow: hidden;

}

.button--atlas:hover .marquee__inner {
	animation-play-state: running;
	opacity: 1;
	transition-duration: 0.4s;
}

.marquee span {
	text-align: center;
	white-space: nowrap;
	font-style: italic;
	padding: 0.5rem 0.5rem;
  
}

@keyframes marquee {
	0% {
		transform: translate3d(var(--move-initial), 0, 0);
	}

	100% {
		transform: translate3d(var(--move-final), 0, 0);
	}
}






// background bubbles







.body {
    background: linear-gradient(to bottom, #212121, #4fb783, #212121);
    margin: 0;
    overflow: hidden;
  }
  
  $bubble-count: 50;
  $sway-type: "sway-left-to-right", "sway-right-to-left";
  
  @function random_range($min, $max) {
    $rand: random();
    $random_range: $min + floor($rand * (($max - $min) + 1));
    @return $random_range;
  }
  
  @function sample($list) {
    @return nth($list, random(length($list)));
  }
  
  .bubbles {
	  max-width: 100%;
    overflow: hidden;
  }
  
  .bubble {
    position: absolute;
    left: var(--bubble-left-offset);
    bottom: -30%;
    display: block;
    width: var(--bubble-radius);
    height: var(--bubble-radius);
    border-radius: 50%;
    animation: float-up var(--bubble-float-duration) var(--bubble-float-delay) ease-in infinite;
  
    &::before {
      position: absolute;
      content: '';
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: hsla(181, 100%, 56%, 0.087);
      border-radius: inherit;
      animation: var(--bubble-sway-type) var(--bubble-sway-duration) var(--bubble-sway-delay) ease-in-out alternate infinite;
    }
  
    @for $i from 0 through $bubble-count {
      &:nth-child(#{$i}) {
        --bubble-left-offset: #{random_range(0vw, 100vw)};
        --bubble-radius: #{random_range(1vw, 10vw)};
        --bubble-float-duration: #{random_range(6s, 12s)};
        --bubble-sway-duration: #{random_range(4s, 6s)};
        --bubble-float-delay: #{random_range(0s, 4s)};
        --bubble-sway-delay: #{random_range(0s, 4s)};
        --bubble-sway-type: #{sample($sway-type)};
      }
    }
  }
  
  @keyframes float-up {
    to {
      transform: translateY(-175vh);
    }
  }
  
  @keyframes sway-left-to-right {
    from {
      transform: translateX(-100%);
    }
  
    to {
      transform: translateX(100%);
    }
  }
  
  @keyframes sway-right-to-left {
    from {
      transform: translateX(100%);
    }
  
    to {
      transform: translateX(-100%);
    }
  }